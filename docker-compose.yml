version: '3.8'

services:
  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: test
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/usr/share/docker/mysql
    networks:
      - bitloops

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/usr/share/docker/mongo
    networks:
      - bitloops

  nats:
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222"
      - "6222:6222"
      - "4223:4223"
      - "6223:6223"
      - "8223:8223"
    volumes:
      - nats_data:/usr/share/docker/nats-server
    networks:
      - bitloops
    command: [ "-js", "-m", "8223" ]

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: postgres
      # POSTGRES_DB: yourdbname
      # POSTGRES_USER: yourusername
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/usr/share/docker/postgresql
    networks:
      - bitloops

  prometheus-nats-exporter:
    image: natsio/prometheus-nats-exporter:latest
    # environment:
    # POSTGRES_PASSWORD: postgres
    # POSTGRES_DB: yourdbname
    # POSTGRES_USER: yourusername
    ports:
      - "7777:7777"
    command:
      [
        "-DV",
        "-gatewayz",
        "-connz",
        "-varz",
        "-jsz=all",
        "http://nats:8223"
      ]
    networks:
      - bitloops

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      # - "16686:16686"
      # - "14268:14268"
      - "6831:6831"
      - "6832:6832"
      - "5778:5778"
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=debug
    networks:
      - bitloops

  # hotrod:
  #   image: jaegertracing/example-hotrod:latest
  #   # To run the latest trunk build, find the tag at Docker Hub and use the line below
  #   # https://hub.docker.com/r/jaegertracing/example-hotrod-snapshot/tags
  #   #image: jaegertracing/example-hotrod-snapshot:0ab8f2fcb12ff0d10830c1ee3bb52b745522db6c
  #   ports:
  #     - "8080:8082"
  #   command: ["all"]
  #   environment:
  #     - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14268/api/traces
  #   networks:
  #     - bitloops
  #   depends_on:
  #     - jaeger
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - "9090:9090"
    networks:
      - bitloops
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    env_file:
      - config
    volumes:
      - grafana_data:/usr/share/Docker/grafana
      - ./grafana/provisioning:/usr/share/docker/grafana/provisioning
    environment:
      - GF_SECURITY_opentelemetry_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - "3001:9090"
    networks:
      - bitloops
    labels:
      org.label-schema.group: "monitoring"

volumes:
  mysql_data:
  mongo_data:
  nats_data:
  postgres_data:
  prometheus_data:
  grafana_data:


networks:
  bitloops:
